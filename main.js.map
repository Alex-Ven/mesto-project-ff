{"version":3,"file":"main.js","mappings":"mBAAO,SAASA,EAAUC,GACxBA,EAAMC,UAAUC,IAAI,mBACpBF,EAAMG,iBAAiB,QAASC,GAChCC,SAASF,iBAAiB,UAAWG,EACvC,CAGO,SAASC,EAAWP,GACzBA,EAAMC,UAAUO,OAAO,mBACvBR,EAAMG,iBAAiB,QAASC,GAChCC,SAASI,oBAAoB,UAAWH,EAE1C,CAEA,SAASA,EAAgBI,EAAKV,GACZ,WAAZU,EAAIC,KAENJ,EADoBF,SAASO,cAAc,oBAG/C,CAEO,SAASR,EAAoBM,GAC9BA,EAAIG,SAAWH,EAAII,eACrBP,EAAWG,EAAII,cAEnB,CCzBA,IAAMC,EAAS,CACbC,QAAS,4CACTC,QAAS,CACPC,cAAe,uCACf,eAAgB,qBAIpB,SAASC,EAAcC,GACrB,OAAIA,EAAIC,GACCD,EAAIE,OAEJC,QAAQC,OAAO,WAADC,OAAYL,EAAIM,QAEzC,CAEO,ICdDC,EAAetB,SAASO,cAAc,kBAAkBgB,QACjDC,EAAkBxB,SAASO,cAAc,iBAE/C,SAASkB,EACdC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAMC,EAAcT,EACjBf,cAAc,iBACdyB,WAAU,GACPC,EAAYF,EAAYxB,cAAc,gBACtC2B,EAAYH,EAAYxB,cAAc,gBACtC4B,EAAmBJ,EAAYxB,cAAc,wBAC7C6B,EAAiBL,EAAYxB,cAAc,sBAC3C8B,EAAkBN,EAAYxB,cAAc,uBA4BlD,OA1BA0B,EAAUK,IAAMX,EAASY,KACzBN,EAAUO,IAAM,wBAA0Bb,EAASc,KACnDP,EAAUQ,YAAcf,EAASc,KACjCJ,EAAgBK,YAAcf,EAASgB,MAAMC,OAEzClB,IAAWC,EAASkB,MAAMC,IAC5BX,EAAiBY,MAAMC,QAAU,OAEjCb,EAAiBrC,iBAAiB,SAAS,WACzC,IAAMmD,EAAStB,EAASmB,IACxBlB,EAAaG,EAAakB,EAC5B,IAGctB,EAASgB,MAAMO,MAAK,SAACC,GAAI,OAAKA,EAAKL,MAAQpB,CAAM,KAE/DU,EAAexC,UAAUC,IAAI,+BAG/BuC,EAAetC,iBAAiB,SAAS,WACvC+B,EAAWQ,EAAiBD,EAAgBT,EAC9C,IACAM,EAAUnC,iBAAiB,SAAS,WAClCgC,EAAiBH,EAASY,KAAMZ,EAASc,KAC3C,IAEOV,CACT,CAEO,SAASH,EAAaG,EAAakB,GACxC,IAAMG,EAAerB,EAAYsB,QAAQ,UDFjB,SAACJ,GACzB,OAAOK,MAAM,GAADlC,OAAIV,EAAOC,QAAO,WAAAS,OAAU6B,GAAU,CAChDM,OAAQ,SACR3C,QAASF,EAAOE,UACf4C,KAAK1C,EACV,ECFE2C,CAAWR,GACRO,MAAK,WACJJ,EAAajD,QACf,IACCuD,OAAM,SAACC,GACNC,QAAQC,MAAM,8CAADzC,OAA+CuC,GAC9D,GACJ,CAEO,SAAS9B,EAAWQ,EAAiBD,EAAgBT,GDE9B,IAACsB,ECDzBb,EAAexC,UAAUkE,SAAS,gCDCTb,ECAZtB,EAASmB,IDCnBQ,MAAM,GAADlC,OAAIV,EAAOC,QAAO,iBAAAS,OAAgB6B,GAAU,CACtDM,OAAQ,SACR3C,QAASF,EAAOE,UACf4C,KAAK1C,ICHH0C,MAAK,SAACzC,GACLqB,EAAexC,UAAUmE,OAAO,+BAChC1B,EAAgBK,YAAc3B,EAAI4B,MAAMC,MAC1C,IACCc,OAAM,SAACC,GACNC,QAAQC,MAAM,wCAAyCF,EACzD,IDdqB,SAACV,GAC1B,OAAOK,MAAM,GAADlC,OAAIV,EAAOC,QAAO,iBAAAS,OAAgB6B,GAAU,CACtDM,OAAQ,MACR3C,QAASF,EAAOE,UACf4C,KAAK1C,EACV,CCWIkD,CAAYrC,EAASmB,KAClBU,MAAK,SAACzC,GACLqB,EAAexC,UAAUmE,OAAO,+BAChC1B,EAAgBK,YAAc3B,EAAI4B,MAAMC,MAC1C,IACCc,OAAM,SAACC,GACNC,QAAQC,MAAM,0CAA2CF,EAC3D,GAEN,CCjFO,IAAMM,EAAqB,CAChCC,aAAc,eACdC,cAAe,gBACfC,qBAAsB,iBACtBC,oBAAqB,yBACrBC,gBAAiB,0BACjBC,WAAY,wBAeRC,EAAiB,SAACC,EAAaC,EAAcT,GACjD,IAAMU,EAAeF,EAAYlE,cAAc,IAADa,OAAKsD,EAAaE,GAAE,WAC9DD,IACFD,EAAaG,kBAAkB,IAC/BH,EAAa9E,UAAUO,OAAO8D,EAAmBK,iBACjDK,EAAa/E,UAAUO,OAAO8D,EAAmBM,YACjDI,EAAajC,YAAc,GAE/B,EA0BMoC,EAAoB,SAACC,EAAWC,EAAef,IAN7B,SAACc,GACvB,OAAOA,EAAU7B,MAAK,SAACwB,GACrB,OAAQA,EAAaO,SAASC,KAChC,GACF,CAGMC,CAAgBJ,IAIlBC,EAAcI,gBAAgB,YAAY,GAC1CJ,EAAcpF,UAAUO,OAAO8D,EAAmBI,uBAJlDW,EAAcK,aAAa,YAAY,GACvCL,EAAcpF,UAAUC,IAAIoE,EAAmBI,qBAKnD,EA8BaiB,EAAkB,SAACb,EAAaR,GAC3C,IAAMc,EAAYQ,MAAMC,KACtBf,EAAYgB,iBAAiBxB,EAAmBE,gBAE5Ca,EAAgBP,EAAYlE,cAChC0D,EAAmBG,sBAErBW,EAAUW,SAAQ,SAAChB,GACjBF,EAAeC,EAAaC,EAAcT,GAC1CS,EAAaiB,MAAQ,EACvB,IACAb,EAAkBC,EAAWC,EAAef,EAC9C,ECzGO,SAAS2B,EACdC,EACAC,GAGA,IAFAC,EAAWC,UAAApD,OAAA,QAAAqD,IAAAD,UAAA,GAAAA,UAAA,GAAG,YACdE,EAAWF,UAAApD,OAAA,QAAAqD,IAAAD,UAAA,GAAAA,UAAA,GAAG,gBAGZF,EAAOpD,YADLmD,EACmBK,EAEAH,CAEzB,C,sGCgBA,IACIrE,EAAS,IFqDmB,SAACuC,GACdsB,MAAMC,KACrBxF,SAASyF,iBAAiBxB,EAAmBC,eAEtCwB,SAAQ,SAACjB,GAChBA,EAAY3E,iBAAiB,UAAU,SAAUO,GAC/CA,EAAI8F,gBACN,IAvBsB,SAAC1B,EAAaR,GACtC,IAAMc,EAAYQ,MAAMC,KACtBf,EAAYgB,iBAAiBxB,EAAmBE,gBAE5Ca,EAAgBP,EAAYlE,cAChC0D,EAAmBG,sBAErBU,EAAkBC,EAAWC,EAAef,GAC5Cc,EAAUW,SAAQ,SAAChB,GACjBA,EAAa5E,iBAAiB,SAAS,YA3CpB,SAAC2E,EAAaC,EAAcT,GAC7CS,EAAaO,SAASmB,gBACxB1B,EAAaG,kBAAkBH,EAAa2B,QAAQC,cAEpD5B,EAAaG,kBAAkB,IAE5BH,EAAaO,SAASC,MAQzBV,EAAeC,EAAaC,EAAcT,GApCvB,SACrBQ,EACAC,EACA4B,EACArC,GAEA,IAAMU,EAAeF,EAAYlE,cAAc,IAADa,OAAKsD,EAAaE,GAAE,WAClEF,EAAa9E,UAAUC,IAAIoE,EAAmBK,iBAC9CK,EAAa/E,UAAUC,IAAIoE,EAAmBM,YAC9CI,EAAajC,YAAc4D,CAC7B,CAmBIC,CACE9B,EACAC,EACAA,EAAa8B,kBACbvC,EAKN,CA4BMwC,CAAQhC,EAAaC,EAAcT,GACnCa,EAAkBC,EAAWC,EAAef,EAC9C,GACF,GACF,CAUIyC,CAAkBjC,EAAaR,EACjC,GACF,CE7DA0C,CAAiB1C,GAEjB,IAAM2C,EAAe5G,SAASO,cAAc,wBACtCsG,EAAe7G,SAASO,cAAc,oBACtCuG,EAAY9G,SAASO,cAAc,wBACnCwG,EAAa/G,SAASO,cAAc,yBACpCyG,EAAchH,SAASO,cAAc,mBACrC0G,EAAqBjH,SAASO,cAAc,yBAC5C2G,EAAclH,SAASmH,MAAMC,YAC7BC,EAAoBrH,SAASmH,MAAMG,WACnCA,EAAatH,SAASO,cAAc,sBACpCgH,EAAgBvH,SAASO,cAAc,mBAEvCiH,GADYN,EAAY3G,cAAc,iBACpB2G,EAAY3G,cAAc,4BAC5CkH,EAAyBP,EAAY3G,cACzC,kCAEImH,EAAe1H,SAASmH,MAAMQ,SAC9BC,EAAmBF,EAAaG,SAAS,cACzCC,EAAmBJ,EAAaG,SAAS,cACzCE,EAAe/H,SAASO,cAAc,qBACtCyH,EAAoBhI,SAASO,cAAc,iBAC3C0H,EAAsBjI,SAASO,cAAc,mBAC7C2H,EAAoBlI,SAASyF,iBAAiB,UAEpD,SAAS3D,EAAiBS,EAAMC,GAC9BwF,EAAkB1F,IAAMC,EACxByF,EAAkBxF,IAAMA,EACxByF,EAAoBvF,YAAcF,EAClC9C,EAAUqI,EACZ,CAyHO,SAASI,EAAaC,EAAS/H,GAAoC,IAA/B6F,EAAWF,UAAApD,OAAA,QAAAqD,IAAAD,UAAA,GAAAA,UAAA,GAAG,gBACvD3F,EAAI8F,iBAEJ,IAAMkC,EAAehI,EAAIiI,UACnBvC,EAAcsC,EAAa3F,YACjCkD,GAAc,EAAMyC,EAActC,EAAaG,GAG/CkC,IACG5E,MAAK,WACJnD,EAAIG,OAAO+H,OACb,IACC7E,OAAM,SAACC,GACNC,QAAQC,MAAM,WAADzC,OAAYuC,GAC3B,IACC6E,SAAQ,WACP5C,GAAc,EAAOyC,EAActC,EAAaG,EAClD,GACJ,CAzFAqB,EAAczH,iBAAiB,SAAS,WACtCwF,EAAgBgC,EAAYrD,GAC5BvE,EAAU4H,EACZ,IAwBAI,EAAa5H,iBAAiB,UA3E9B,SAA6BO,GAC3BA,EAAI8F,iBAiBJgC,GAhBA,WACE,OJxBwB1F,EIwBLmF,EAAiBjC,MJxBNpD,EIwBauF,EAAiBnC,MJvBvDrC,MAAM,GAADlC,OAAIV,EAAOC,QAAO,UAAU,CACtC4C,OAAQ,OACR3C,QAASF,EAAOE,QAChB6H,KAAMC,KAAKC,UAAU,CAAElG,KAAAA,EAAMF,KAAAA,MAC5BiB,KAAK1C,IIoBL0C,MAAK,SAACoF,GACL,IAAMC,EAAepH,EACnBC,EACAkH,EACAhH,EACAC,EACAC,GAEFN,EAAgBsH,QAAQD,GACxB3I,EAAW0G,GACXc,EAAaa,QACbjD,EAAgBoC,EAAczD,EAChC,IJrCuB,IAACxB,EAAMF,CIsChC,GAC0BlC,EAC5B,IAyDA6G,EAAYpH,iBAAiB,UAlD7B,SAAuBO,GACrBA,EAAI8F,iBAYJgC,GAXA,WACE,IAAM1F,EAAO+E,EAAgB7B,MACvBoD,EAAQtB,EAAuB9B,MACrC,OJ/DyB,SAAClD,EAAMsG,GAClC,OAAOzF,MAAM,GAADlC,OAAIV,EAAOC,QAAO,aAAa,CACzC4C,OAAQ,QACR3C,QAASF,EAAOE,QAChB6H,KAAMC,KAAKC,UAAU,CACnBlG,KAAAA,EACAsG,MAAAA,MAEDvF,KAAK1C,EACV,CIsDWkI,CAAcvG,EAAMsG,GAAOvF,MAAK,SAACyF,GACtCjC,EAAYtE,YAAcuG,EAASxG,KACnCwE,EAAmBvE,YAAcuG,EAASF,MAC1CnF,QAAQsF,IAAIzG,EAAMsG,GAClB7I,EAAW2G,GACXK,EAAYqB,OACd,GACF,GAC0BlI,EAC5B,IAqCAgH,EAAkBvH,iBAAiB,UAxBnC,SAA6BO,GAC3BA,EAAI8F,iBACJ,IAAMgD,EAAa9I,EAAIiI,UACjBc,EAAY/B,EAAkBQ,SAAS,eAAelC,MAC5DC,GAAc,EAAMuD,GJjDM,SAACC,GAC3B,OAAO9F,MAAM,GAADlC,OAAIV,EAAOC,QAAO,oBAAoB,CAChD4C,OAAQ,QACR3C,QAASF,EAAOE,QAChB6H,KAAMC,KAAKC,UAAU,CACnBU,OAAQD,MAET5F,KAAK1C,EACV,CI2CEwI,CAAaF,GACV5F,MAAK,SAACzC,GACLwG,EAAclC,aACZ,QAAO,0BAAAjE,OACmBL,EAAIsI,OAAM,OAEtCnJ,EAAWoH,EACb,IACC5D,OAAM,SAACG,GACND,QAAQC,MAAM,iCAAkCA,EAClD,IACC2E,SAAQ,WACP5C,GAAc,EAAOuD,EACvB,GACJ,IAMArC,EAAUhH,iBAAiB,SAAS,WAClCwF,EAAgBoC,EAAczD,GAC9BvE,EAAUkH,EACZ,IACAG,EAAWjH,iBAAiB,SAzC5B,WACEwF,EAAgB4B,EAAajD,GArB7BuD,EAAgB7B,MAAQqB,EAAYtE,YACpC+E,EAAuB9B,MAAQsB,EAAmBvE,YAsBlDhD,EAAUmH,EACZ,IAuCAqB,EAAkBxC,SAAQ,SAAU/F,GAClCA,EAAMG,iBAAiB,SAAS,SAAUO,IAEtCA,EAAIG,SAAWH,EAAII,eACnBJ,EAAIG,OAAOZ,UAAUkE,SAAS,kBAE9B5D,EAAWP,EAEf,GACF,IAEAuB,QAAQqI,IAAI,CJtIHjG,MAAM,GAADlC,OAAIV,EAAOC,QAAO,UAAU,CACtC4C,OAAQ,MACR3C,QAASF,EAAOE,UACf4C,KAAK1C,GAVDwC,MAAM,GAADlC,OAAIV,EAAOC,QAAO,aAAa,CACzC4C,OAAQ,MACR3C,QAASF,EAAOE,UACf4C,KAAK1C,KI2IP0C,MAAK,SAAAgG,GAA8B,I,IAAAC,G,EAAA,E,4CAAAD,I,s1BAA5BE,EAAYD,EAAA,GAAEE,EAAQF,EAAA,GACfE,EAASN,OACtB3H,EAASiI,EAAS7G,IAClBkE,EAAYtE,YAAciH,EAASlH,KACnCwE,EAAmBvE,YAAciH,EAASZ,MAC1CxB,EAAcxE,MAAM6G,gBAAkB,OAAHxI,OAAUuI,EAASN,OAAM,KAE5DK,EAAahE,SAAQ,SAAU/D,GAC7B,IAAMI,EAAcN,EAClBC,EACAC,EACAC,EACAC,EACAC,GAEFN,EAAgBqI,OAAO9H,EACzB,GACF,IACC2B,OAAM,SAACC,GACNC,QAAQkG,IAAInG,EACd,G","sources":["webpack://praktikum/./src/scripts/modal.js","webpack://praktikum/./src/scripts/api.js","webpack://praktikum/./src/scripts/card.js","webpack://praktikum/./src/scripts/validation.js","webpack://praktikum/./src/scripts/utils.js","webpack://praktikum/./src/scripts/index.js"],"sourcesContent":["export function openPopup(popup) {\n  popup.classList.add('popup_is-opened');\n  popup.addEventListener('click', closePopapOnOverlay)\n  document.addEventListener('keydown', closePopapByEsc);\n}\n\n\nexport function closePopup(popup) {\n  popup.classList.remove('popup_is-opened');\n  popup.addEventListener('click', closePopapOnOverlay)\n  document.removeEventListener('keydown', closePopapByEsc);\n  \n}\n\nfunction closePopapByEsc(evt, popup) {\n  if (evt.key === 'Escape') {\n    const openedPopup = document.querySelector(\".popup_is-opened\");\n    closePopup(openedPopup);\n  }\n}\n\nexport function closePopapOnOverlay(evt) {\n  if (evt.target === evt.currentTarget) {\n    closePopup(evt.currentTarget);\n  }\n};","const config = {\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-21\",\n  headers: {\n    authorization: \"114f9c26-8877-4f32-9463-7751c1b4ac62\",\n    \"Content-Type\": \"application/json\",\n  },\n};\n\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  } else {\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n}\n\nexport const getUserData = () => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    method: \"GET\",\n    headers: config.headers,\n  }).then(checkResponse);\n};\n\nexport const getInitialCards = () => {\n  return fetch(`${config.baseUrl}/cards`, {\n    method: \"GET\",\n    headers: config.headers,\n  }).then(checkResponse);\n};\n\nexport const patchUserData = (name, about) => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify({\n      name,\n      about,\n    }),\n  }).then(checkResponse);\n};\n\nexport const postNewCard = (name, link) => {\n  return fetch(`${config.baseUrl}/cards`, {\n    method: \"POST\",\n    headers: config.headers,\n    body: JSON.stringify({ name, link }),\n  }).then(checkResponse);\n};\n\nexport const removeCard = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\n    method: \"DELETE\",\n    headers: config.headers,\n  }).then(checkResponse);\n};\n\nexport const addLikeCard = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n    method: \"PUT\",\n    headers: config.headers,\n  }).then(checkResponse);\n};\n\nexport const deleteLikeCard = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n    method: \"DELETE\",\n    headers: config.headers,\n  }).then(checkResponse);\n};\n\nexport const updateAvatar = (avatarUrl) => {\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: avatarUrl,\n    }),\n  }).then(checkResponse);\n};","import { removeCard, addLikeCard, deleteLikeCard } from \"./api.js\";\n\nconst cardTemplate = document.querySelector(\"#card-template\").content;\nexport const cardsPlacesList = document.querySelector(\".places__list\");\n\nexport function createCard(\n  userId,\n  cardData,\n  deleteCardFn,\n  likeCardFn,\n  openPicturePopup\n) {\n  const cardElement = cardTemplate\n    .querySelector(\".places__item\")\n    .cloneNode(true);\n  const cardImage = cardElement.querySelector(\".card__image\");\n  const cardTitle = cardElement.querySelector(\".card__title\");\n  const cardDeleteButton = cardElement.querySelector(\".card__delete-button\");\n  const cardlikeButton = cardElement.querySelector(\".card__like-button\");\n  const cardLikeCounter = cardElement.querySelector(\".card__like-counter\");\n\n  cardImage.src = cardData.link;\n  cardImage.alt = \"Фотография с места - \" + cardData.name;\n  cardTitle.textContent = cardData.name;\n  cardLikeCounter.textContent = cardData.likes.length;\n\n  if (userId !== cardData.owner._id) {\n    cardDeleteButton.style.display = \"none\";\n  } else {\n    cardDeleteButton.addEventListener(\"click\", () => {\n      const cardId = cardData._id;\n      deleteCardFn(cardElement, cardId);\n    });\n  }\n\n  const isLiked = cardData.likes.some((like) => like._id === userId);\n  if (isLiked) {\n    cardlikeButton.classList.add(\"card__like-button_is-active\");\n  }\n\n  cardlikeButton.addEventListener(\"click\", () => {\n    likeCardFn(cardLikeCounter, cardlikeButton, cardData);\n  });\n  cardImage.addEventListener(\"click\", function () {\n    openPicturePopup(cardData.link, cardData.name);\n  });\n\n  return cardElement;\n}\n\nexport function deleteCardFn(cardElement, cardId) {\n  const cardToRemove = cardElement.closest(\".card\");\n  removeCard(cardId)\n    .then(() => {\n      cardToRemove.remove();\n    })\n    .catch((err) => {\n      console.error(`\"Произошла ошибка при удалении карточки:\", ${err}`);\n    });\n}\n\nexport function likeCardFn(cardLikeCounter, cardlikeButton, cardData) {\n  if (cardlikeButton.classList.contains(\"card__like-button_is-active\")) {\n    deleteLikeCard(cardData._id)\n      .then((res) => {\n        cardlikeButton.classList.toggle(\"card__like-button_is-active\");\n        cardLikeCounter.textContent = res.likes.length;\n      })\n      .catch((err) => {\n        console.error(\"Произошла ошибка при удалении лайка:\", err);\n      });\n  } else {\n    addLikeCard(cardData._id)\n      .then((res) => {\n        cardlikeButton.classList.toggle(\"card__like-button_is-active\");\n        cardLikeCounter.textContent = res.likes.length;\n      })\n      .catch((err) => {\n        console.error(\"Произошла ошибка при добавлении лайка:\", err);\n      });\n  }\n}\n","export const validationSettings = {\n  formSelector: \".popup__form\",\n  inputSelector: \".popup__input\",\n  submitButtonSelector: \".popup__button\",\n  inactiveButtonClass: \"popup__button_disabled\",\n  inputErrorClass: \"popup__input_type_error\",\n  errorClass: \"popup__error_visible\",\n};\n\nconst showInputError = (\n  formElement,\n  inputElement,\n  errorMessage,\n  validationSettings\n) => {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.add(validationSettings.inputErrorClass);\n  errorElement.classList.add(validationSettings.errorClass);\n  errorElement.textContent = errorMessage;\n};\n\nconst hideInputError = (formElement, inputElement, validationSettings) => {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  if (errorElement) {\n    inputElement.setCustomValidity(\"\");\n    inputElement.classList.remove(validationSettings.inputErrorClass);\n    errorElement.classList.remove(validationSettings.errorClass);\n    errorElement.textContent = \"\";\n  }\n};\n\nexport const isValid = (formElement, inputElement, validationSettings) => {\n  if (inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity(\"\");\n  }\n  if (!inputElement.validity.valid) {\n    showInputError(\n      formElement,\n      inputElement,\n      inputElement.validationMessage,\n      validationSettings\n    );\n  } else {\n    hideInputError(formElement, inputElement, validationSettings);\n  }\n};\n\nconst hasInvalidInput = (inputList) => {\n  return inputList.some((inputElement) => {\n    return !inputElement.validity.valid;\n  });\n};\n\nconst toggleButtonState = (inputList, buttonElement, validationSettings) => {\n  if (hasInvalidInput(inputList)) {\n    buttonElement.setAttribute(\"disabled\", true);\n    buttonElement.classList.add(validationSettings.inactiveButtonClass);\n  } else {\n    buttonElement.removeAttribute(\"disabled\", false);\n    buttonElement.classList.remove(validationSettings.inactiveButtonClass);\n  }\n};\n\nconst setEventListeners = (formElement, validationSettings) => {\n  const inputList = Array.from(\n    formElement.querySelectorAll(validationSettings.inputSelector)\n  );\n  const buttonElement = formElement.querySelector(\n    validationSettings.submitButtonSelector\n  );\n  toggleButtonState(inputList, buttonElement, validationSettings);\n  inputList.forEach((inputElement) => {\n    inputElement.addEventListener(\"input\", () => {\n      isValid(formElement, inputElement, validationSettings);\n      toggleButtonState(inputList, buttonElement, validationSettings);\n    });\n  });\n};\n\nexport const enableValidation = (validationSettings) => {\n  const formList = Array.from(\n    document.querySelectorAll(validationSettings.formSelector)\n  );\n  formList.forEach((formElement) => {\n    formElement.addEventListener(\"submit\", function (evt) { \n      evt.preventDefault(); \n    });\n    setEventListeners(formElement, validationSettings);\n  });\n};\n\nexport const clearValidation = (formElement, validationSettings) => {\n  const inputList = Array.from(\n    formElement.querySelectorAll(validationSettings.inputSelector)\n  );\n  const buttonElement = formElement.querySelector(\n    validationSettings.submitButtonSelector\n  );\n  inputList.forEach((inputElement) => {\n    hideInputError(formElement, inputElement, validationSettings);\n    inputElement.value = \"\";\n  });\n  toggleButtonState(inputList, buttonElement, validationSettings);\n};","export function renderLoading(\n  isLoading,\n  button,\n  initialText = \"Сохранить\",\n  loadingText = \"Сохранение...\"\n) {\n  if (isLoading) {\n    button.textContent = loadingText;\n  } else {\n    button.textContent = initialText;\n  }\n}","import \"../pages/index.css\";\nimport { openPopup, closePopup } from \"./modal.js\";\nimport {\n  createCard,\n  deleteCardFn,\n  likeCardFn,\n  cardsPlacesList,\n} from \"./card.js\";\n\nimport {\n  enableValidation,\n  validationSettings,\n  clearValidation,\n} from \"./validation\";\n\nimport {\n  getUserData,\n  getInitialCards,\n  updateAvatar,\n  patchUserData,\n  postNewCard,\n} from \"./api.js\";\n\nimport {\n  renderLoading\n} from \"./utils.js\";\n\nlet userAvatar = \"\";\nlet userId = \"\";\n\nenableValidation(validationSettings);\n\nconst popupAddCard = document.querySelector(\".popup_type_new-card\");\nconst popupProfile = document.querySelector(\".popup_type_edit\");\nconst addButton = document.querySelector(\".profile__add-button\");\nconst editButton = document.querySelector(\".profile__edit-button\");\nconst profileName = document.querySelector(\".profile__title\");\nconst profileDescription = document.querySelector(\".profile__description\");\nconst profileForm = document.forms.editProfile;\nconst avatarFormElement = document.forms.avatarForm;\nconst avatarForm = document.querySelector(\".popup_type-avatar\");\nconst profileAvatar = document.querySelector(\".profile__image\");\nconst formInput = profileForm.querySelector(\".popup__input\");\nconst profileFormName = profileForm.querySelector(\".popup__input_type_name\");\nconst profileFormDescription = profileForm.querySelector(\n  \".popup__input_type_description\"\n);\nconst newPlaceForm = document.forms.newPlace;\nconst newPlaceCardName = newPlaceForm.elements[\"place-name\"];\nconst newPlaceCardlink = newPlaceForm.elements[\"place-link\"];\nconst picturePopup = document.querySelector(\".popup_type_image\");\nconst picturePopupImage = document.querySelector(\".popup__image\");\nconst picturePopupCaption = document.querySelector(\".popup__caption\");\nconst popupCloseButtons = document.querySelectorAll(\".popup\");\n\nfunction openPicturePopup(link, alt) {\n  picturePopupImage.src = link;\n  picturePopupImage.alt = alt;\n  picturePopupCaption.textContent = alt;\n  openPopup(picturePopup);\n}\n\nfunction addCardToPlacesList(evt) {\n  evt.preventDefault()\n  function makeRequest() {\n    return postNewCard(newPlaceCardName.value, newPlaceCardlink.value )\n    .then((addedCard) => {\n      const newPlaceCard = createCard(\n        userId,\n        addedCard,\n        deleteCardFn,\n        likeCardFn,\n        openPicturePopup\n      );\n      cardsPlacesList.prepend(newPlaceCard);\n      closePopup(popupAddCard);\n      newPlaceForm.reset();\n      clearValidation(newPlaceForm, validationSettings);\n    });\n  }\n  handleSubmit(makeRequest, evt);\n}\n\nfunction setProfileForm() {\n  profileFormName.value = profileName.textContent;\n  profileFormDescription.value = profileDescription.textContent;\n}\n\nfunction changeProfile(evt) {\n  evt.preventDefault();\n  function makeRequest() {\n    const name = profileFormName.value;\n    const about = profileFormDescription.value;\n    return patchUserData(name, about).then((dataUser) => {\n      profileName.textContent = dataUser.name;\n      profileDescription.textContent = dataUser.about;\n      console.dir(name, about);\n      closePopup(popupProfile);\n      profileForm.reset();\n    });\n  }\n  handleSubmit(makeRequest, evt);\n}\n\nfunction openProfilePopup() {\n  clearValidation(profileForm, validationSettings);\n  setProfileForm();\n  openPopup(popupProfile);\n}\n\nprofileAvatar.addEventListener(\"click\", function () {\n  clearValidation(avatarForm, validationSettings);\n  openPopup(avatarForm);\n});\n\nfunction changeProfileAvatar(evt) {\n  evt.preventDefault();\n  const saveButton = evt.submitter;\n  const avatarUrl = avatarFormElement.elements[\"avatar-link\"].value;\n  renderLoading(true, saveButton);\n\n  updateAvatar(avatarUrl)\n    .then((res) => {\n      profileAvatar.setAttribute(\n        \"style\",\n        `background-image: url('${res.avatar}')`\n      );\n      closePopup(avatarForm);\n    })\n    .catch((error) => {\n      console.error(\"Ошибка при сохранении аватара:\", error);\n    })\n    .finally(() => {\n      renderLoading(false, saveButton);\n    });\n}\n\nnewPlaceForm.addEventListener(\"submit\", addCardToPlacesList);\nprofileForm.addEventListener(\"submit\", changeProfile);\navatarFormElement.addEventListener(\"submit\", changeProfileAvatar);\n\naddButton.addEventListener(\"click\", function () {\n  clearValidation(newPlaceForm, validationSettings);\n  openPopup(popupAddCard);\n});\neditButton.addEventListener(\"click\", openProfilePopup);\n\npopupCloseButtons.forEach(function (popup) {\n  popup.addEventListener(\"click\", function (evt) {\n    if (\n      evt.target === evt.currentTarget ||\n      evt.target.classList.contains(\"popup__close\")\n    ) {\n      closePopup(popup);\n    }\n  });\n});\n\nPromise.all([getInitialCards(), getUserData()])\n  .then(([initialCards, userData]) => {\n    userAvatar = userData.avatar;\n    userId = userData._id;\n    profileName.textContent = userData.name;\n    profileDescription.textContent = userData.about;\n    profileAvatar.style.backgroundImage = `url(${userData.avatar})`;\n\n    initialCards.forEach(function (cardData) {\n      const cardElement = createCard(\n        userId,\n        cardData,\n        deleteCardFn,\n        likeCardFn,\n        openPicturePopup\n      );\n      cardsPlacesList.append(cardElement);\n    });\n  })\n  .catch((err) => {\n    console.log(err);\n  });\n\nexport function handleSubmit(request, evt, loadingText = \"Сохранение...\") {\n  evt.preventDefault();\n\n  const submitButton = evt.submitter;\n  const initialText = submitButton.textContent;\n  renderLoading(true, submitButton, initialText, loadingText);\n\n  \n  request()\n    .then(() => {\n      evt.target.reset(); \n    })\n    .catch((err) => {\n      console.error(`Ошибка: ${err}`);\n    })\n    .finally(() => {\n      renderLoading(false, submitButton, initialText, loadingText);\n    });\n}\n"],"names":["openPopup","popup","classList","add","addEventListener","closePopapOnOverlay","document","closePopapByEsc","closePopup","remove","removeEventListener","evt","key","querySelector","target","currentTarget","config","baseUrl","headers","authorization","checkResponse","res","ok","json","Promise","reject","concat","status","cardTemplate","content","cardsPlacesList","createCard","userId","cardData","deleteCardFn","likeCardFn","openPicturePopup","cardElement","cloneNode","cardImage","cardTitle","cardDeleteButton","cardlikeButton","cardLikeCounter","src","link","alt","name","textContent","likes","length","owner","_id","style","display","cardId","some","like","cardToRemove","closest","fetch","method","then","removeCard","catch","err","console","error","contains","toggle","addLikeCard","validationSettings","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","hideInputError","formElement","inputElement","errorElement","id","setCustomValidity","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","removeAttribute","setAttribute","clearValidation","Array","from","querySelectorAll","forEach","value","renderLoading","isLoading","button","initialText","arguments","undefined","loadingText","preventDefault","patternMismatch","dataset","errorMessage","showInputError","validationMessage","isValid","setEventListeners","enableValidation","popupAddCard","popupProfile","addButton","editButton","profileName","profileDescription","profileForm","forms","editProfile","avatarFormElement","avatarForm","profileAvatar","profileFormName","profileFormDescription","newPlaceForm","newPlace","newPlaceCardName","elements","newPlaceCardlink","picturePopup","picturePopupImage","picturePopupCaption","popupCloseButtons","handleSubmit","request","submitButton","submitter","reset","finally","body","JSON","stringify","addedCard","newPlaceCard","prepend","about","patchUserData","dataUser","dir","saveButton","avatarUrl","avatar","updateAvatar","all","_ref","_ref2","initialCards","userData","backgroundImage","append","log"],"sourceRoot":""}